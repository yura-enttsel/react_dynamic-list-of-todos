{"version":3,"sources":["types/Select.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["Select","TodoList","todos","selectedTodoId","selectTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","status","handleSelect","handleInput","name","value","onChange","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","TodoModal","user","isModalLoading","closeModal","href","email","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","App","useState","setTodos","setTodo","setUser","setSelectedTodoId","setIsModalLoading","setStatus","setQuery","visibleTodos","useMemo","filter","td","titleLow","toLowerCase","queryLow","includes","loadTodos","a","loadedTodos","loadUser","loadedUser","useEffect","length","selectedTodo","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,0FCUCC,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MAAOC,EADgC,EAChCA,eAAgBC,EADgB,EAChBA,WADgB,OAGvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OACRF,UAAWG,IAAW,CACpB,4BAA6BD,EAAKE,KAAON,IAH7C,UAOE,oBAAIE,UAAU,eAAd,SAA8BE,EAAKE,KACnC,oBAAIJ,UAAU,eAAd,SACGE,EAAKG,WACJ,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWG,IAAW,CACpB,mBAAoBD,EAAKG,UACzB,mBAAoBH,EAAKG,YAH7B,SAMGH,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,aAAW,qBACX,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMT,EAAWG,IAL5B,SAOE,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWG,IAAW,MAAO,CAC9B,SAAUL,IAAmBI,EAAKE,GAClC,eAAgBN,IAAmBI,EAAKE,eA/B3CF,EAAKE,c,SDlCRT,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KESL,IAAMc,EAA8B,SAAC,GAAD,IACzCC,EADyC,EACzCA,MAAOC,EADkC,EAClCA,OAAQC,EAD0B,EAC1BA,aAAcC,EADY,EACZA,YADY,OAGzC,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,aAAW,gBACX,UAAQ,eACRc,KAAK,gBACLC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWL,EAAaK,EAAMC,OAAOH,QALjD,UAOE,wBAAQA,MAAOpB,EAAOwB,IAAtB,iBACA,wBAAQJ,MAAOpB,EAAOyB,OAAtB,oBACA,wBAAQL,MAAOpB,EAAO0B,UAAtB,8BAKN,oBAAGrB,UAAU,qDAAb,UACE,uBACE,aAAW,eACX,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVsB,YAAY,YACZR,KAAK,QACLC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAWJ,EAAYI,EAAMC,OAAOH,UAEhD,sBAAMf,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgBuB,MAAO,CAAEC,cAAe,OAAxD,SACGd,GAEC,wBACE,aAAW,sBACX,UAAQ,oBACRH,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMK,EAAY,gBCjD1BY,G,MAAmB,kBAC9B,qBAAKzB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCON0B,EAA6B,SAAC,GAEpC,IADLC,EACI,EADJA,KAAMC,EACF,EADEA,eAAgB1B,EAClB,EADkBA,KAAM2B,EACxB,EADwBA,WAE5B,OACE,sBAAK7B,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEd4B,EACC,cAAC,EAAD,IAEA,sBAAK5B,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,gCAIYE,QAJZ,IAIYA,OAJZ,EAIYA,EAAME,MAIlB,wBACE,aAAW,eACXG,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAASqB,OAIb,sBAAK7B,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACGE,QADH,IACGA,OADH,EACGA,EAAMI,QAGT,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UACO,OAAJE,QAAI,IAAJA,KAAMG,UACL,wBAAQL,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAGD,OAED,mBAAG8B,KAAI,wBAAYH,QAAZ,IAAYA,OAAZ,EAAYA,EAAMI,OAAzB,gBACGJ,QADH,IACGA,OADH,EACGA,EAAMb,oBC1CvB,SAASkB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IAEMC,EAAU,SAACC,GAAD,OAAoBZ,EAAG,iBAAiBY,KCZlDC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOjD,EAAP,KAAckD,EAAd,KACA,EAAwBD,mBAAsB,MAA9C,mBAAO5C,EAAP,KAAa8C,EAAb,KACA,EAAwBF,mBAAsB,MAA9C,mBAAOnB,EAAP,KAAasB,EAAb,KACA,EAA4CH,mBAAS,GAArD,mBAAOhD,EAAP,KAAuBoD,EAAvB,KACA,EAA4CJ,oBAAS,GAArD,mBAAOlB,EAAP,KAAuBuB,EAAvB,KACA,EAA4BL,mBAASnD,EAAOwB,KAA5C,mBAAOR,EAAP,KAAeyC,EAAf,KACA,EAA0BN,mBAAS,IAAnC,mBAAOpC,EAAP,KAAc2C,EAAd,KAEMC,EAAeC,mBAAQ,WAC3B,OAAO1D,EAAM2D,QAAO,SAAAC,GAClB,IAAMC,EAAWD,EAAGnD,MAAMqD,cACpBC,EAAWlD,EAAMiD,cACftD,EAAcoD,EAAdpD,UAER,OAAQM,GACN,KAAKhB,EAAOwB,IACV,OAAOuC,EAASG,SAASD,GAC3B,KAAKjE,EAAOyB,OACV,OAAQf,GAAaqD,EAASG,SAASD,GACzC,KAAKjE,EAAO0B,UACV,OAAOhB,GAAaqD,EAASG,SAASD,GACxC,QACE,OAAOH,QAGZ,CAAC9C,EAAQD,EAAOb,IAEbiE,EAAS,uCAAG,4BAAAC,EAAA,sEDlBU/B,EAAY,UCkBtB,OACVgC,EADU,OAGhBjB,EAASiB,GAHO,2CAAH,qDAMTC,EAAQ,uCAAG,WAAOrB,GAAP,eAAAmB,EAAA,sEACUpB,EAAQC,GADlB,OACTsB,EADS,OAGfjB,EAAQiB,GACRf,GAAkB,GAJH,2CAAH,sDAOdgB,qBAAU,WACRL,MACC,IAkBH,OACE,qCACE,qBAAK9D,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,MAAOA,EACPC,OAAQA,EACRC,aAda,SAACG,GAAD,OAAmBqC,EAAUrC,IAe1CF,YAdY,SAACE,GAAD,OAAmBsC,EAAStC,QAkB5C,qBAAKf,UAAU,QAAf,SACGH,EAAMuE,OAAS,EACd,cAAC,EAAD,CACEvE,MAAOyD,EACPxD,eAAgBA,EAChBC,WArCS,SAACsE,GACxBnB,EAAkBmB,EAAajE,IAC/B+C,GAAkB,GAClBH,EAAQqB,GACRJ,EAASI,EAAazB,WAoCV,cAAC,EAAD,aAOT1C,GACC,cAAC,EAAD,CACEyB,KAAMA,EACNC,eAAgBA,EAChB1B,KAAMA,EACN2B,WA7CiB,WACvBqB,EAAkB,GAClBD,EAAQ,MACRD,EAAQ,aClEZsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9b9ecaf7.chunk.js","sourcesContent":["export enum Select {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  selectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectedTodoId, selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': todo.id === selectedTodoId,\n          })}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              aria-label=\"Select todo button\"\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye': selectedTodoId !== todo.id,\n                  'fa-eye-slash': selectedTodoId === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { Select } from '../../types/Select';\n\ntype Props = {\n  query: string;\n  status: Select;\n  handleSelect: (value: Select) => void;\n  handleInput: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query, status, handleSelect, handleInput,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          aria-label=\"Status select\"\n          data-cy=\"statusSelect\"\n          name=\"Status select\"\n          value={status}\n          onChange={(event) => handleSelect(event.target.value as Select)}\n        >\n          <option value={Select.ALL}>All</option>\n          <option value={Select.ACTIVE}>Active</option>\n          <option value={Select.COMPLETED}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        aria-label=\"Search input\"\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        name=\"query\"\n        value={query}\n        onChange={(event) => handleInput(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            aria-label=\"Clear search button\"\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => handleInput('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User | null;\n  isModalLoading: boolean;\n  todo: Todo | null;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  user, isModalLoading, todo, closeModal,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isModalLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              aria-label=\"Close button\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { Select } from './types/Select';\nimport { getTodos, getUser } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [isModalLoading, setIsModalLoading] = useState(false);\n  const [status, setStatus] = useState(Select.ALL);\n  const [query, setQuery] = useState('');\n\n  const visibleTodos = useMemo(() => {\n    return todos.filter(td => {\n      const titleLow = td.title.toLowerCase();\n      const queryLow = query.toLowerCase();\n      const { completed } = td;\n\n      switch (status) {\n        case Select.ALL:\n          return titleLow.includes(queryLow);\n        case Select.ACTIVE:\n          return !completed && titleLow.includes(queryLow);\n        case Select.COMPLETED:\n          return completed && titleLow.includes(queryLow);\n        default:\n          return td;\n      }\n    });\n  }, [status, query, todos]);\n\n  const loadTodos = async () => {\n    const loadedTodos = await getTodos();\n\n    setTodos(loadedTodos);\n  };\n\n  const loadUser = async (userId: number) => {\n    const loadedUser = await getUser(userId);\n\n    setUser(loadedUser);\n    setIsModalLoading(false);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const handleSelectTodo = (selectedTodo: Todo) => {\n    setSelectedTodoId(selectedTodo.id);\n    setIsModalLoading(true);\n    setTodo(selectedTodo);\n    loadUser(selectedTodo.userId);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTodoId(0);\n    setUser(null);\n    setTodo(null);\n  };\n\n  const handleChangeSelect = (value: Select) => setStatus(value);\n  const handleChangeInput = (value: string) => setQuery(value);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                status={status}\n                handleSelect={handleChangeSelect}\n                handleInput={handleChangeInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodoId={selectedTodoId}\n                  selectTodo={handleSelectTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && (\n        <TodoModal\n          user={user}\n          isModalLoading={isModalLoading}\n          todo={todo}\n          closeModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}